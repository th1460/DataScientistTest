require(DT)
require(plotly)
require(glue)
require(leaflet)
require(lme4)
canal <- dbConnect(RSQLite::SQLite(), dbname = "DB.sqlite")
fit <-
tbl(canal, "dataset_a") %>%
filter(customerCode == 8068) %>%
as_tibble() %>%
slice(1:46) %>%
group_by(month) %>%
mutate(cumN = cumsum(n),
cumTotal = cumsum(total)) %>%
glmer(cumN ~ poly(day, 2) + (day|month) ,
offset = log(cumTotal),
family = poisson(link = "log"),
data = .)
predito <-
tibble(pred = predict(fit, newdata = data.frame(day = 1:31, month = 1), type = "response")) %>%
bind_rows(tibble(pred = predict(fit, newdata = data.frame(day = 1:31, month = 2), type = "response"))) %>%
bind_cols(month = rep(1:2, c(31, 31))) %>%
bind_cols(day = rep(1:31, 2)) %>%
mutate(month = factor(month, labels = c("Janeiro", "Fevereiro")))
g4 <- tbl(canal, "dataset_a") %>%
filter(customerCode == 215) %>%
as_tibble() %>%
mutate(month = factor(month, labels = c("Janeiro", "Fevereiro"))) %>%
group_by(month) %>%
mutate(cumN = cumsum(n),
cumTotal = cumsum(total)) %>%
ggplot() +
aes(day, cumN/cumTotal * 100) +
geom_line() +
facet_grid(~ month) +
theme_minimal() +
geom_line(data = predito %>% filter(month == "Janeiro"), aes(day, pred * 100, colour = "Proje??es")) +
geom_line(data = predito %>% filter(month == "Fevereiro"), aes(day, pred * 100, colour = "Proje??es")) +
geom_point(data = predito %>% filter(month == "Fevereiro", day == 28),
aes(day, pred * 100,
colour = "Dia 28",
text = glue("Dia: {day} <br> %: {round(pred * 100, 1)}")),
size = 2, alpha = .7) +
labs(x = "Dias", colour = "")
ggplotly(g4, tooltip = "text")
fit <-
tbl(canal, "dataset_a") %>%
filter(customerCode == 8068) %>%
as_tibble() %>%
slice(1:46) %>%
group_by(month) %>%
mutate(cumN = cumsum(n),
cumTotal = cumsum(total)) %>%
glmer(cumN ~ poly(day, 2) + (day|month) ,
offset = log(cumTotal),
family = poisson(link = "log"),
data = .)
predito <-
tibble(pred = predict(fit, newdata = data.frame(day = 1:31, month = 1), type = "response")) %>%
bind_rows(tibble(pred = predict(fit, newdata = data.frame(day = 1:31, month = 2), type = "response"))) %>%
bind_cols(month = rep(1:2, c(31, 31))) %>%
bind_cols(day = rep(1:31, 2)) %>%
mutate(month = factor(month, labels = c("Janeiro", "Fevereiro")))
g4 <- tbl(canal, "dataset_a") %>%
filter(customerCode == 8069) %>%
as_tibble() %>%
mutate(month = factor(month, labels = c("Janeiro", "Fevereiro"))) %>%
group_by(month) %>%
mutate(cumN = cumsum(n),
cumTotal = cumsum(total)) %>%
ggplot() +
aes(day, cumN/cumTotal * 100) +
geom_line() +
facet_grid(~ month) +
theme_minimal() +
geom_line(data = predito %>% filter(month == "Janeiro"), aes(day, pred * 100, colour = "Projeções")) +
geom_line(data = predito %>% filter(month == "Fevereiro"), aes(day, pred * 100, colour = "Projeções")) +
geom_point(data = predito %>% filter(month == "Fevereiro", day == 28),
aes(day, pred * 100,
colour = "Dia 28",
text = glue("Dia: {day} <br> %: {round(pred * 100, 1)}")),
size = 2, alpha = .7) +
labs(x = "Dias", colour = "")
fit <-
tbl(canal, "dataset_a") %>%
filter(customerCode == 8068) %>%
as_tibble() %>%
slice(1:46) %>%
group_by(month) %>%
mutate(cumN = cumsum(n),
cumTotal = cumsum(total)) %>%
glmer(cumN ~ poly(day, 2) + (day|month) ,
offset = log(cumTotal),
family = poisson(link = "log"),
data = .)
predito <-
tibble(pred = predict(fit, newdata = data.frame(day = 1:31, month = 1), type = "response")) %>%
bind_rows(tibble(pred = predict(fit, newdata = data.frame(day = 1:31, month = 2), type = "response"))) %>%
bind_cols(month = rep(1:2, c(31, 31))) %>%
bind_cols(day = rep(1:31, 2)) %>%
mutate(month = factor(month, labels = c("Janeiro", "Fevereiro")))
g4 <- tbl(canal, "dataset_a") %>%
filter(customerCode == 8069) %>%
as_tibble() %>%
mutate(month = factor(month, labels = c("Janeiro", "Fevereiro"))) %>%
group_by(month) %>%
mutate(cumN = cumsum(n),
cumTotal = cumsum(total)) %>%
ggplot() +
aes(day, cumN/cumTotal * 100) +
geom_line() +
facet_grid(~ month) +
theme_minimal() +
geom_line(data = predito %>% filter(month == "Janeiro"), aes(day, pred * 100, colour = "Projeções")) +
geom_line(data = predito %>% filter(month == "Fevereiro"), aes(day, pred * 100, colour = "Projeções")) +
geom_point(data = predito %>% filter(month == "Fevereiro", day == 28),
aes(day, pred * 100,
colour = "Dia 28",
text = glue("Dia: {day} <br> %: {round(pred * 100, 1)}")),
size = 2, alpha = .7) +
labs(x = "Dias", colour = "")
g4 <- tbl(canal, "dataset_a") %>%
filter(customerCode == 8068) %>%
as_tibble() %>%
mutate(month = factor(month, labels = c("Janeiro", "Fevereiro"))) %>%
group_by(month) %>%
mutate(cumN = cumsum(n),
cumTotal = cumsum(total)) %>%
ggplot() +
aes(day, cumN/cumTotal * 100) +
geom_line() +
facet_grid(~ month) +
theme_minimal() +
geom_line(data = predito %>% filter(month == "Janeiro"), aes(day, pred * 100, colour = "Projeções")) +
geom_line(data = predito %>% filter(month == "Fevereiro"), aes(day, pred * 100, colour = "Projeções")) +
geom_point(data = predito %>% filter(month == "Fevereiro", day == 28),
aes(day, pred * 100,
colour = "Dia 28",
text = glue("Dia: {day} <br> %: {round(pred * 100, 1)}")),
size = 2, alpha = .7) +
labs(x = "Dias", colour = "")
ggplotly(g4, tooltip = "text")
erro <- tbl(canal, "dataset_a") %>%
filter(customerCode == 8068) %>%
as_tibble() %>%
group_by(month) %>%
mutate(cumN = cumsum(n),
cumTotal = cumsum(total)) %>%
ungroup() %>%
slice(47:56) %>%
select(day, cumN, cumTotal) %>%
mutate(obs = cumN/cumTotal * 100,
pred = predict(fit,
newdata = data.frame(day = 17:26, month = 2),
type = "response") * 100,
`erro %` = abs(pred - obs)/obs * 100)
tbl(canal, "dataset_a") %>%
filter(customerCode == 8068) %>%
as_tibble() %>%
mutate(month = factor(month, labels = c("Janeiro", "Fevereiro"))) %>%
group_by(month) %>%
mutate(cumN = cumsum(n),
cumTotal = cumsum(total)) %>% View
pred <- function(x){
(predict(fit,
newdata = data.frame(day = x, month = 2),
type = "response") * 100) %>% round(1)
}
erro <- tbl(canal, "dataset_a") %>%
filter(customerCode == 8068) %>%
as_tibble() %>%
group_by(month) %>%
mutate(cumN = cumsum(n),
cumTotal = cumsum(total)) %>%
ungroup() %>%
slice(47:56) %>%
select(day, cumN, cumTotal) %>%
mutate(obs = (cumN/cumTotal * 100) %>% round(1),
pred = pred(day),
erro = (abs(pred - obs)/obs * 100) %>% round(1)) %>%
select(day, obs, pred, erro)
erro
tbl(canal, "dataset_a") %>%
filter(customerCode == 8068) %>%
as_tibble() %>%
group_by(month) %>%
mutate(cumN = cumsum(n),
cumTotal = cumsum(total)) %>%
ungroup()
tbl(canal, "dataset_a") %>%
filter(customerCode == 8068) %>%
as_tibble() %>%
filter(month == 2)
data_train2 <-
tbl(canal, "dataset_a") %>%
filter(customerCode == 8068) %>%
as_tibble() %>%
filter(month == 2)
data_train2 %>% count()
data_train2 %>% count() %>% pull() * .6
data_train2 %>% count() %>% pull() * .8
data_train2 %<>%
slice(1:round(data_train2 %>% count() %>% pull() * .7, 0))
data_train2
data_test %>%
slice(round(data_train2 %>% count() %>% pull() * .7, 0):n())
data2 <-
tbl(canal, "dataset_a") %>%
filter(customerCode == 8068) %>%
as_tibble() %>%
filter(month == 2)
data_train1 <-
tbl(canal, "dataset_a") %>%
filter(customerCode == 8068) %>%
as_tibble() %>%
filter(month == 1)
data2 <-
tbl(canal, "dataset_a") %>%
filter(customerCode == 8068) %>%
as_tibble() %>%
filter(month == 2)
data_train2 <-
data2 %>%
slice(1:round(data2 %>% count() %>% pull() * .7, 0))
data_test <-
data2 %>% anti_join(data_train2, by = "day")
data_test
fit <-
data_train1 %>%
bind_rows(data_train2) %>%
group_by(month) %>%
mutate(cumN = cumsum(n),
cumTotal = cumsum(total)) %>%
glmer(cumN ~ poly(day, 2) + (day|month) ,
offset = log(cumTotal),
family = poisson(link = "log"),
data = .)
predito <-
tibble(pred = predict(fit, newdata = data.frame(day = 1:31, month = 1), type = "response")) %>%
bind_rows(tibble(pred = predict(fit, newdata = data.frame(day = 1:31, month = 2), type = "response"))) %>%
bind_cols(month = rep(1:2, c(31, 31))) %>%
bind_cols(day = rep(1:31, 2)) %>%
mutate(month = factor(month, labels = c("Janeiro", "Fevereiro")))
erro <- data_test %>%
select(day, cumN, cumTotal) %>%
mutate(obs = (cumN/cumTotal * 100) %>% round(1),
pred = pred(day),
erro = (abs(pred - obs)/obs * 100) %>% round(1)) %>%
select(day, obs, pred, erro)
erro <- data_test %>%
group_by(month) %>%
mutate(cumN = cumsum(n),
cumTotal = cumsum(total)) %>%
ungroup() %>%
slice(47:56) %>%
select(day, cumN, cumTotal) %>%
mutate(obs = (cumN/cumTotal * 100) %>% round(1),
pred = pred(day),
erro = (abs(pred - obs)/obs * 100) %>% round(1)) %>%
select(day, obs, pred, erro)
erro <- data_test %>%
mutate(cumN = cumsum(n),
cumTotal = cumsum(total)) %>%
ungroup() %>%
slice(47:56) %>%
select(day, cumN, cumTotal) %>%
mutate(obs = (cumN/cumTotal * 100) %>% round(1),
pred = pred(day),
erro = (abs(pred - obs)/obs * 100) %>% round(1)) %>%
select(day, obs, pred, erro)
data_test
erro <- data_test %>%
mutate(cumN = cumsum(n),
cumTotal = cumsum(total)) %>%
select(day, cumN, cumTotal) %>%
mutate(obs = (cumN/cumTotal * 100) %>% round(1),
pred = pred(day),
erro = (abs(pred - obs)/obs * 100) %>% round(1)) %>%
select(day, obs, pred, erro)
erro
data_train1 <-
tbl(canal, "dataset_a") %>%
filter(customerCode == 215) %>%
as_tibble() %>%
filter(month == 1)
data2 <-
tbl(canal, "dataset_a") %>%
filter(customerCode == 215) %>%
as_tibble() %>%
filter(month == 2)
data_train2 <-
data2 %>%
slice(1:round(data2 %>% count() %>% pull() * .7, 0))
data_test <-
data2 %>% anti_join(data_train2, by = "day")
fit <-
data_train1 %>%
bind_rows(data_train2) %>%
group_by(month) %>%
mutate(cumN = cumsum(n),
cumTotal = cumsum(total)) %>%
glmer(cumN ~ poly(day, 2) + (day|month) ,
offset = log(cumTotal),
family = poisson(link = "log"),
data = .)
predito <-
tibble(pred = predict(fit, newdata = data.frame(day = 1:31, month = 1), type = "response")) %>%
bind_rows(tibble(pred = predict(fit, newdata = data.frame(day = 1:31, month = 2), type = "response"))) %>%
bind_cols(month = rep(1:2, c(31, 31))) %>%
bind_cols(day = rep(1:31, 2)) %>%
mutate(month = factor(month, labels = c("Janeiro", "Fevereiro")))
g4 <- tbl(canal, "dataset_a") %>%
filter(customerCode == 215) %>%
as_tibble() %>%
mutate(month = factor(month, labels = c("Janeiro", "Fevereiro"))) %>%
group_by(month) %>%
mutate(cumN = cumsum(n),
cumTotal = cumsum(total)) %>% View
g4 <- tbl(canal, "dataset_a") %>%
filter(customerCode == 215) %>%
as_tibble() %>%
mutate(month = factor(month, labels = c("Janeiro", "Fevereiro"))) %>%
group_by(month) %>%
mutate(cumN = cumsum(n),
cumTotal = cumsum(total))
ggplot() +
aes(day, cumN/cumTotal * 100) +
geom_line() +
facet_grid(~ month) +
theme_minimal() +
geom_line(data = predito %>% filter(month == "Janeiro"), aes(day, pred * 100, colour = "Projeções")) +
geom_line(data = predito %>% filter(month == "Fevereiro"), aes(day, pred * 100, colour = "Projeções")) +
geom_point(data = predito %>% filter(month == "Fevereiro", day == 28),
aes(day, pred * 100,
colour = "Dia 28",
text = glue("Dia: {day} <br> %: {round(pred * 100, 1)}")),
size = 2, alpha = .7) +
labs(x = "Dias", colour = "")
ggplotly(g4, tooltip = "text")
g4
g4 <- tbl(canal, "dataset_a") %>%
filter(customerCode == 215) %>%
as_tibble() %>%
mutate(month = factor(month, labels = c("Janeiro", "Fevereiro"))) %>%
group_by(month) %>%
mutate(cumN = cumsum(n),
cumTotal = cumsum(total)) %>%
ggplot() +
aes(day, cumN/cumTotal * 100) +
geom_line() +
facet_grid(~ month) +
theme_minimal() +
geom_line(data = predito %>% filter(month == "Janeiro"), aes(day, pred * 100, colour = "Projeções")) +
geom_line(data = predito %>% filter(month == "Fevereiro"), aes(day, pred * 100, colour = "Projeções")) +
geom_point(data = predito %>% filter(month == "Fevereiro", day == 28),
aes(day, pred * 100,
colour = "Dia 28",
text = glue("Dia: {day} <br> %: {round(pred * 100, 1)}")),
size = 2, alpha = .7) +
labs(x = "Dias", colour = "")
ggplotly(g4, tooltip = "text")
data_train1 <-
tbl(canal, "dataset_a") %>%
filter(customerCode == 215) %>%
as_tibble() %>%
filter(month == 1)
data2 <-
tbl(canal, "dataset_a") %>%
filter(customerCode == 215) %>%
as_tibble() %>%
filter(month == 2)
data_train2 <-
data2 %>%
slice(1:round(data2 %>% count() %>% pull() * .7, 0))
data_test <-
data2 %>% anti_join(data_train2, by = "day")
fit <-
data_train1 %>%
bind_rows(data_train2) %>%
group_by(month) %>%
mutate(cumN = cumsum(n),
cumTotal = cumsum(total)) %>%
glmer(cumN ~ poly(day, 2) + (day|month) ,
offset = log(cumTotal),
family = poisson(link = "log"),
data = .)
data_train1 %>%
bind_rows(data_train2)
data_train1 %>%
bind_rows(data_train2) %>% View
fit <-
data_train1 %>%
bind_rows(data_train2) %>%
group_by(month) %>%
mutate(cumN = cumsum(n),
cumTotal = cumsum(total)) %>%
glmer(cumN ~ poly(day, 2) + (day|month) ,
offset = log(cumTotal),
family = poisson(link = "log"),
data = .)
fit
predito <-
tibble(pred = predict(fit, newdata = data.frame(day = 1:31, month = 1), type = "response")) %>%
bind_rows(tibble(pred = predict(fit, newdata = data.frame(day = 1:31, month = 2), type = "response"))) %>%
bind_cols(month = rep(1:2, c(31, 31))) %>%
bind_cols(day = rep(1:31, 2)) %>%
mutate(month = factor(month, labels = c("Janeiro", "Fevereiro")))
predito
g4 <- tbl(canal, "dataset_a") %>%
filter(customerCode == 215) %>%
as_tibble() %>%
mutate(month = factor(month, labels = c("Janeiro", "Fevereiro"))) %>%
group_by(month) %>%
mutate(cumN = cumsum(n),
cumTotal = cumsum(total)) %>%
ggplot() +
aes(day, cumN/cumTotal * 100) +
geom_line() +
facet_grid(~ month) +
theme_minimal() +
geom_line(data = predito %>% filter(month == "Janeiro"), aes(day, pred * 100, colour = "Projeções")) +
geom_line(data = predito %>% filter(month == "Fevereiro"), aes(day, pred * 100, colour = "Projeções")) +
geom_point(data = predito %>% filter(month == "Fevereiro", day == 28),
aes(day, pred * 100,
colour = "Dia 28",
text = glue("Dia: {day} <br> %: {round(pred * 100, 1)}")),
size = 2, alpha = .7) +
labs(x = "Dias", colour = "")
ggplotly(g4, tooltip = "text")
pred <- function(x){
(predict(fit,
newdata = data.frame(day = x, month = 2),
type = "response") * 100) %>% round(1)
}
erro <- data_test %>%
mutate(cumN = cumsum(n),
cumTotal = cumsum(total)) %>%
select(day, cumN, cumTotal) %>%
mutate(obs = (cumN/cumTotal * 100) %>% round(1),
pred = pred(day),
erro = (abs(pred - obs)/obs * 100) %>% round(1)) %>%
select(day, obs, pred, erro)
erro
erro %>% summarise(MAPE = mean(`erro %`))
erro %>% summarise(MAPE = mean(erro))
data2
data_train1 <-
tbl(canal, "dataset_a") %>%
filter(customerCode == 215) %>%
as_tibble() %>%
filter(month == 1)
data2 <-
tbl(canal, "dataset_a") %>%
filter(customerCode == 215) %>%
as_tibble() %>%
filter(month == 2)
data_train2 <-
data2 %>%
slice(1:round(data2 %>% count() %>% pull() * .8, 0))
data_test <-
data2 %>% anti_join(data_train2, by = "day")
fit <-
data_train1 %>%
bind_rows(data_train2) %>%
group_by(month) %>%
mutate(cumN = cumsum(n),
cumTotal = cumsum(total)) %>%
glmer(cumN ~ poly(day, 2) + (day|month) ,
offset = log(cumTotal),
family = poisson(link = "log"),
data = .)
predito <-
tibble(pred = predict(fit, newdata = data.frame(day = 1:31, month = 1), type = "response")) %>%
bind_rows(tibble(pred = predict(fit, newdata = data.frame(day = 1:31, month = 2), type = "response"))) %>%
bind_cols(month = rep(1:2, c(31, 31))) %>%
bind_cols(day = rep(1:31, 2)) %>%
mutate(month = factor(month, labels = c("Janeiro", "Fevereiro")))
g4 <- tbl(canal, "dataset_a") %>%
filter(customerCode == 215) %>%
as_tibble() %>%
mutate(month = factor(month, labels = c("Janeiro", "Fevereiro"))) %>%
group_by(month) %>%
mutate(cumN = cumsum(n),
cumTotal = cumsum(total)) %>%
ggplot() +
aes(day, cumN/cumTotal * 100) +
geom_line() +
facet_grid(~ month) +
theme_minimal() +
geom_line(data = predito %>% filter(month == "Janeiro"), aes(day, pred * 100, colour = "Projeções")) +
geom_line(data = predito %>% filter(month == "Fevereiro"), aes(day, pred * 100, colour = "Projeções")) +
geom_point(data = predito %>% filter(month == "Fevereiro", day == 28),
aes(day, pred * 100,
colour = "Dia 28",
text = glue("Dia: {day} <br> %: {round(pred * 100, 1)}")),
size = 2, alpha = .7) +
labs(x = "Dias", colour = "")
ggplotly(g4, tooltip = "text")
pred <- function(x){
(predict(fit,
newdata = data.frame(day = x, month = 2),
type = "response") * 100) %>% round(1)
}
erro <- data_test %>%
mutate(cumN = cumsum(n),
cumTotal = cumsum(total)) %>%
select(day, cumN, cumTotal) %>%
mutate(obs = (cumN/cumTotal * 100) %>% round(1),
pred = pred(day),
erro = (abs(pred - obs)/obs * 100) %>% round(1)) %>%
select(day, obs, pred, erro)
erro %>% summarise(MAPE = mean(erro))
